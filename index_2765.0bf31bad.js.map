{"version":3,"sources":["/src/main.js"],"sourcesContent":["// 1. Initialize the board\nconst canvas = document.getElementById('canvas');\nconst start_button = document.getElementById('start-btn');\nconst stop_button = document.getElementById('stop-btn');\nconst erase_button = document.getElementById('erase-btn');\nconst paint_button = document.getElementById('paint-btn');\nconst plus_button = document.getElementById('plus-btn');\nconst minus_button = document.getElementById('minus-btn');\nconst restart_button = document.getElementById('restart-btn');\nconst paint_size = document.getElementById('paint-size');\npaint_size.innerText = 1;\nconst context = canvas.getContext('2d');\n\nconst BLOCK_SIZE = 6;\nconst BOARD_WIDTH = 100;\nconst BOARD_HEIGHT = 100;\n\nconst updateInterval = 42;\nlet gameStarted = false;\nlet generation = 0;\nlet painting = false;\nlet erase = false;\nlet paintSize = 1;\nlet population = 0;\n\ncanvas.width = BOARD_WIDTH * BLOCK_SIZE;\ncanvas.height = BOARD_HEIGHT * BLOCK_SIZE;\n\nfunction createInitBoard() {\n  let board = [];\n  for (let i = 0; i < BOARD_HEIGHT; i++) {\n    board[i] = [];\n    for (let j = 0; j < BOARD_WIDTH; j++) {\n      board[i][j] = 0;\n    }\n  }\n  return board;\n}\n\nlet board = createInitBoard();\n\ncontext.scale(BLOCK_SIZE, BLOCK_SIZE);\n\n// 2. Game loop\n\nfunction update() {\n  if (!gameStarted) return;\n  board = nextGeneration(board);\n  draw();\n  updateGeneration();\n  updateAliveCount();\n}\n\nfunction updateGeneration() {\n  generation++;\n  document.getElementById('generation').innerText = generation;\n}\n\nfunction updateAliveCount() {\n  let aliveCount = 0;\n  board.forEach((row) => {\n    row.forEach((value) => {\n      if (value === 1) aliveCount++;\n    });\n  });\n  population = aliveCount;\n  document.getElementById('alive-count').innerText = population;\n}\n\nfunction draw() {\n  context.fillStyle = '#dad7cd';\n  context.fillRect(0, 0, BOARD_WIDTH, BOARD_HEIGHT);\n\n  board.forEach((row, y) => {\n    row.forEach((value, x) => {\n      if (value === 1) {\n        context.fillStyle = 'black';\n        context.fillRect(x, y, 1, 1);\n      }\n    });\n  });\n}\n\nstart_button.addEventListener('click', () => {\n  start_button.style.display = 'none';\n  stop_button.style.display = 'block';\n  restart_button.setAttribute('disabled', 'true');\n  gameStarted = true;\n  setInterval(update, updateInterval);\n});\n\nstop_button.addEventListener('click', () => {\n  start_button.style.display = 'block';\n  stop_button.style.display = 'none';\n  restart_button.removeAttribute('disabled', 'false');\n  gameStarted = false;\n});\n\ncanvas.addEventListener('mousedown', (event) => {\n  if (!gameStarted) painting = true;\n  handleDrawInCanvas(event);\n});\ncanvas.addEventListener('mouseup', () => {\n  painting = false;\n});\ncanvas.addEventListener('mouseleave', () => {\n  painting = false;\n});\ncanvas.addEventListener('mousemove', handleDrawInCanvas);\n\n// Touchescreen\ncanvas.addEventListener('touchstart', (event) => {\n  event.preventDefault();\n  if (!gameStarted) painting = true;\n  const touches = {\n    offsetX: event.touches[0].clientX - canvas.getBoundingClientRect().left,\n    offsetY: event.touches[0].clientY - canvas.getBoundingClientRect().top,\n  };\n  \n  handleDrawInCanvas(touches);\n});\ncanvas.addEventListener('touchend', (event) => {\n  event.preventDefault();\n  painting = false;\n});\ncanvas.addEventListener('touchcancel', (event) => {\n  event.preventDefault();\n  painting = false;\n});\ncanvas.addEventListener('touchmove', (event) => {\n  event.preventDefault();\n  const touches = {\n    offsetX: event.touches[0].clientX - canvas.getBoundingClientRect().left,\n    offsetY: event.touches[0].clientY - canvas.getBoundingClientRect().top,\n  };\n  \n  handleDrawInCanvas(touches);\n});\n\nerase_button.addEventListener('click', () => {\n  erase = true;\n  erase_button.setAttribute('activated', 'true');\n  paint_button.removeAttribute('activated', 'false');\n});\n\npaint_button.addEventListener('click', () => {\n  erase = false;\n  erase_button.removeAttribute('activated', 'false');\n  paint_button.setAttribute('activated', 'true');\n});\n\nplus_button.addEventListener('click', () => {\n  if (paintSize < 4) paintSize++;\n  paint_size.innerText = paintSize;\n});\n\nminus_button.addEventListener('click', () => {\n  if (paintSize > 1) paintSize--;\n  paint_size.innerText = paintSize;\n});\n\nrestart_button.addEventListener('click', () => {\n  if (gameStarted) return;\n  board = createInitBoard();\n  generation = 0;\n  draw();\n  document.getElementById('generation').innerText = generation;\n});\n\nfunction handleDrawInCanvas(event) {\n  if (!painting) return;\n\n  const x = Math.floor(event.offsetX / BLOCK_SIZE);\n  const y = Math.floor(event.offsetY / BLOCK_SIZE);\n\n  // Adjust the loops to correctly handle the size\n  for (let i = 0; i < paintSize; i++) {\n    for (let j = 0; j < paintSize; j++) {\n      const row = (y + i + BOARD_HEIGHT) % BOARD_HEIGHT;\n      const col = (x + j + BOARD_WIDTH) % BOARD_WIDTH;\n      board[row][col] = erase ? 0 : 1;\n    }\n  }\n\n  draw();\n  updateAliveCount();\n}\n\n// 3. Game logic\n// 1. Any live cell with fewer than two live neighbors dies, as if by underpopulation.\n// 2. Any live cell with two or three live neighbors lives on to the next generation.\n// 3. Any live cell with more than three live neighbors dies, as if by overpopulation.\n// 4. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n\nfunction nextGeneration(board) {\n  const newBoard = createInitBoard();\n\n  for (let y = 0; y < BOARD_HEIGHT; y++) {\n    for (let x = 0; x < BOARD_WIDTH; x++) {\n      const neighbors = countNeighbors(board, x, y);\n\n      if (board[y][x] === 1) {\n        if (neighbors < 2 || neighbors > 3) {\n          newBoard[y][x] = 0;\n        } else {\n          newBoard[y][x] = 1;\n        }\n      } else {\n        if (neighbors === 3) {\n          newBoard[y][x] = 1;\n        }\n      }\n    }\n  }\n\n  return newBoard;\n}\n\nfunction countNeighbors(board, x, y) {\n  let sum = 0;\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      const row = (y + i + BOARD_HEIGHT) % BOARD_HEIGHT;\n      const col = (x + j + BOARD_WIDTH) % BOARD_WIDTH;\n      sum += board[row][col];\n    }\n  }\n  sum -= board[y][x];\n  return sum;\n}\n\ndraw();"],"names":[],"mappings":"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"}