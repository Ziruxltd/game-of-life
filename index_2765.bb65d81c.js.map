{"version":3,"sources":["/src/main.js"],"sourcesContent":["// 1. Initialize the board\r\nconst canvas = document.getElementById('canvas');\r\nconst start_button = document.getElementById('start-btn');\r\nconst stop_button = document.getElementById('stop-btn');\r\nconst erase_button = document.getElementById('erase-btn');\r\nconst paint_button = document.getElementById('paint-btn');\r\nconst plus_button = document.getElementById('plus-btn');\r\nconst minus_button = document.getElementById('minus-btn');\r\nconst restart_button = document.getElementById('restart-btn');\r\nconst paint_size = document.getElementById('paint-size');\r\npaint_size.innerText = 1;\r\nconst context = canvas.getContext('2d');\r\n\r\nconst BLOCK_SIZE = 6;\r\nconst BOARD_WIDTH = 100;\r\nconst BOARD_HEIGHT = 100;\r\n\r\nconst updateInterval = 42;\r\nlet gameStarted = false;\r\nlet generation = 0;\r\nlet painting = false;\r\nlet erase = false;\r\nlet paintSize = 1;\r\n\r\ncanvas.width = BOARD_WIDTH * BLOCK_SIZE;\r\ncanvas.height = BOARD_HEIGHT * BLOCK_SIZE;\r\n\r\nfunction createInitBoard() {\r\n  let board = [];\r\n  for (let i = 0; i < BOARD_HEIGHT; i++) {\r\n    board[i] = [];\r\n    for (let j = 0; j < BOARD_WIDTH; j++) {\r\n      board[i][j] = 0;\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\nlet board = createInitBoard();\r\n\r\ncontext.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n\r\n// 2. Game loop\r\n\r\nfunction update() {\r\n  if (!gameStarted) return;\r\n  board = nextGeneration(board);\r\n  draw();\r\n  updateGeneration();\r\n}\r\n\r\nfunction updateGeneration() {\r\n  generation++;\r\n  document.getElementById('generation').innerText = generation;\r\n}\r\n\r\nfunction draw() {\r\n  context.fillStyle = '#dad7cd';\r\n  context.fillRect(0, 0, BOARD_WIDTH, BOARD_HEIGHT);\r\n\r\n  board.forEach((row, y) => {\r\n    row.forEach((value, x) => {\r\n      if (value === 1) {\r\n        context.fillStyle = 'black';\r\n        context.fillRect(x, y, 1, 1);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nstart_button.addEventListener('click', () => {\r\n  start_button.style.display = 'none';\r\n  stop_button.style.display = 'block';\r\n  restart_button.setAttribute('disabled', 'true');\r\n  gameStarted = true;\r\n  setInterval(update, updateInterval);\r\n});\r\n\r\nstop_button.addEventListener('click', () => {\r\n  start_button.style.display = 'block';\r\n  stop_button.style.display = 'none';\r\n  restart_button.removeAttribute('disabled', 'false');\r\n  gameStarted = false;\r\n});\r\n\r\ncanvas.addEventListener('mousedown', (event) => {\r\n  if (!gameStarted) painting = true;\r\n  handleDrawInCanvas(event);\r\n});\r\ncanvas.addEventListener('mouseup', () => {\r\n  painting = false;\r\n});\r\ncanvas.addEventListener('mouseleave', () => {\r\n  painting = false;\r\n});\r\ncanvas.addEventListener('mousemove', handleDrawInCanvas);\r\n\r\nerase_button.addEventListener('click', () => {\r\n  erase = true;\r\n  erase_button.setAttribute('activated', 'true');\r\n  paint_button.removeAttribute('activated', 'false');\r\n});\r\n\r\npaint_button.addEventListener('click', () => {\r\n  erase = false;\r\n  erase_button.removeAttribute('activated', 'false');\r\n  paint_button.setAttribute('activated', 'true');\r\n});\r\n\r\nplus_button.addEventListener('click', () => {\r\n  if (paintSize < 4) paintSize++;\r\n  paint_size.innerText = paintSize;\r\n});\r\n\r\nminus_button.addEventListener('click', () => {\r\n  if (paintSize > 1) paintSize--;\r\n  paint_size.innerText = paintSize;\r\n});\r\n\r\nrestart_button.addEventListener('click', () => {\r\n  if (gameStarted) return;\r\n  board = createInitBoard();\r\n  generation = 0;\r\n  draw();\r\n  document.getElementById('generation').innerText = generation;\r\n});\r\n\r\nfunction handleDrawInCanvas(event) {\r\n  if (!painting) return;\r\n  const x = Math.floor(event.offsetX / BLOCK_SIZE);\r\n  const y = Math.floor(event.offsetY / BLOCK_SIZE);\r\n\r\n  // Adjust the loops to correctly handle the size\r\n  for (let i = 0; i < paintSize; i++) {\r\n    for (let j = 0; j < paintSize; j++) {\r\n      const row = (y + i + BOARD_HEIGHT) % BOARD_HEIGHT;\r\n      const col = (x + j + BOARD_WIDTH) % BOARD_WIDTH;\r\n      board[row][col] = erase ? 0 : 1;\r\n    }\r\n  }\r\n\r\n  draw();\r\n}\r\n\r\n// 3. Game logic\r\n// 1. Any live cell with fewer than two live neighbors dies, as if by underpopulation.\r\n// 2. Any live cell with two or three live neighbors lives on to the next generation.\r\n// 3. Any live cell with more than three live neighbors dies, as if by overpopulation.\r\n// 4. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\r\n\r\nfunction nextGeneration(board) {\r\n  const newBoard = createInitBoard();\r\n\r\n  for (let y = 0; y < BOARD_HEIGHT; y++) {\r\n    for (let x = 0; x < BOARD_WIDTH; x++) {\r\n      const neighbors = countNeighbors(board, x, y);\r\n\r\n      if (board[y][x] === 1) {\r\n        if (neighbors < 2 || neighbors > 3) {\r\n          newBoard[y][x] = 0;\r\n        } else {\r\n          newBoard[y][x] = 1;\r\n        }\r\n      } else {\r\n        if (neighbors === 3) {\r\n          newBoard[y][x] = 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return newBoard;\r\n}\r\n\r\nfunction countNeighbors(board, x, y) {\r\n  let sum = 0;\r\n  for (let i = -1; i < 2; i++) {\r\n    for (let j = -1; j < 2; j++) {\r\n      const row = (y + i + BOARD_HEIGHT) % BOARD_HEIGHT;\r\n      const col = (x + j + BOARD_WIDTH) % BOARD_WIDTH;\r\n      sum += board[row][col];\r\n    }\r\n  }\r\n  sum -= board[y][x];\r\n  return sum;\r\n}\r\n\r\ndraw();"],"names":[],"mappings":"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"}